// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderingServiceData;

#nullable disable

namespace OrderingServiceData.Migrations
{
    [DbContext(typeof(OrderingServiceDbContext))]
    [Migration("20251001210011_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("OrderingServiceData.Entities.ApplicationLog", b =>
                {
                    b.Property<long>("LogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("log_id");

                    b.Property<long?>("CustomerID")
                        .HasColumnType("INTEGER")
                        .HasColumnName("customer_id");

                    b.Property<short>("Event")
                        .HasColumnType("INTEGER")
                        .HasColumnName("event");

                    b.Property<string>("EventInfo")
                        .HasColumnType("TEXT")
                        .HasColumnName("event_info");

                    b.Property<DateTime>("LogDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("log_date");

                    b.HasKey("LogID");

                    b.HasIndex("CustomerID");

                    b.ToTable("ApplicationLogs");
                });

            modelBuilder.Entity("OrderingServiceData.Entities.Customer", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("name");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("password_hash");

                    b.HasKey("ID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("OrderingServiceData.Entities.Item", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER")
                        .HasColumnName("deleted");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("TEXT")
                        .HasColumnName("deleted_on");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("name");

                    b.Property<long?>("OrderID")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL")
                        .HasColumnName("price");

                    b.HasKey("ID");

                    b.HasIndex("OrderID");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("OrderingServiceData.Entities.Order", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<long?>("CustomerID")
                        .HasColumnType("INTEGER")
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("order_date");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("REAL")
                        .HasColumnName("total_amount");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("OrderingServiceData.Entities.ApplicationLog", b =>
                {
                    b.HasOne("OrderingServiceData.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("OrderingServiceData.Entities.Item", b =>
                {
                    b.HasOne("OrderingServiceData.Entities.Order", null)
                        .WithMany("Items")
                        .HasForeignKey("OrderID");
                });

            modelBuilder.Entity("OrderingServiceData.Entities.Order", b =>
                {
                    b.HasOne("OrderingServiceData.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("OrderingServiceData.Entities.Order", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
